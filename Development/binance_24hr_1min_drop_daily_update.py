#!/usr/bin/python2.7

# binance_24hr_1min_drop_daily_update.py

# run at 12pm daily (cron @ 19:01 UTC in Tasks)
# updat symbol list
# save latest 24 hr candles for all symbols
# SAVE to disk MAX 1 MIN DROP for all symbols

# FUTURE: runs auto optimizer on last 8 days & saves best params to disk for:
    # future_candles_length
    # buy_trigger_drop_percent_factor
    # sell_trigger_gain_percent_factor
        # (starting with previous best params)

import utility as ut
import utility_2 as ut2
import datetime
import time
from pprint import pprint

################################################################################

save_24hr_candle_data = False
save_24hr_drop_data = True

################################################################################

print('start @', ut.get_time())

# generated by optimization
future_candles_length = 15

min_volume_btc = 0
minutes = 1
datapoints_trailing = 0
drops_to_collect = 2
do_print = True

# update symbol list
ut.update_symbol_list()
symbols = ut.pickle_read('/home/ec2-user/environment/botfarming/Development/binance_btc_symbols.pklz')
symbols_filtered, symbol_list = ut2.get_trimmed_symbols(symbols, min_volume_btc)

# save latest 24 hr candles for all symbols
epoch_now = int(time.time())
readable_date_folder = datetime.datetime.fromtimestamp(epoch_now-7*60*60).strftime('%Y%m%d')
day_folder = readable_date_folder+'_24'
if save_24hr_candle_data:
    readable_date_start = datetime.datetime.fromtimestamp(epoch_now-7*60*60-24*60*60).strftime('%Y-%m-%d')
    readable_date_end = datetime.datetime.fromtimestamp(epoch_now-7*60*60).strftime('%Y-%m-%d')
    start = readable_date_start+' 12:00'
    end = readable_date_end+' 12:00'
    save_params = [
        [ day_folder, start, end ]
    ]
    print('starting download - 1min data set for', day_folder, '(', start, 'to', end, ')')
    ut2.save_data(save_params, datapoints_trailing, min_volume_btc, minutes)
    print('download complete - 1min data set for', day_folder, '(', start, 'to', end, ')')


# save to disk max 1min drop for all symbols
if save_24hr_drop_data:
    print('start save to disk max 1min drop for all symbols', ut.get_time())
    for s in symbols_filtered:
        symbol = symbols_filtered[s]
    
        if do_print:
            print('------------------------------', s, '-----------------------------')
    
        symbol_candles_path = '/home/ec2-user/environment/botfarming/Development/binance_training_data/'+ day_folder + '/'+ s +'_data_'+str(minutes)+'m.pklz'
        candles = ut.pickle_read(symbol_candles_path)
    
        if candles == False:
            print('ERROR', s, 'symbol_candles not found @', symbol_candles_path)
        else:
            outlier_drops = ut2.get_outlier_drops(candles, symbol, future_candles_length, drops_to_collect)
            drop_to_save = {
                'biggest_drop_percent': outlier_drops[-1]['drop_percent'],
                'best_gain_percent': outlier_drops[-1]['best_gain_percent']
            }
    
            symbol_24hr_drop_path = '/home/ec2-user/environment/botfarming/Development/binance_24hr_1min_drop/24hr_1min_drops_by_symbol/'+s+'.pklz'
            ut.pickle_write(symbol_24hr_drop_path, drop_to_save, 'ERROR could not save 24hr 1min drop data for '+s)

print('done @', ut.get_time())